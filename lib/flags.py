from absl import flags

FLAGS = flags.FLAGS
flags.DEFINE_string('input_file', 'data/H5_Cat2_honolulu_kahe_DRFotress_AlohaNap_MTP.csv', 'specifies input file')
flags.DEFINE_string('configuration', '6+6+6', 'specifies intrusion tolerant system configuration')
flags.DEFINE_integer('f', 1, 'number of intrusions tolerated')
flags.DEFINE_integer('k', 7, 'number of downed replicas tolerated')
flags.DEFINE_string('random_count', '1000', 'specifies random cyber attack instances to generate')
flags.DEFINE_string('server_threshold', '0', 'specifies server intrusion threshold for probabilistic method')
flags.DEFINE_string('sites_threshold', '0', 'specifies site isolation threshold for probabilistic method')
flags.DEFINE_integer('method', 1, 'attacker power to use- 1:Worst 2:Random 3:Probabilistic')
flags.DEFINE_integer('num_hurricane_instances', 1000, 'specify number of hurricane instances')
flags.DEFINE_integer('reconfiguration', 0, '1 = on, 0 = off')
flags.DEFINE_enum('hurricane_knowledge', 'no', ['no', 'yes'], 'decide whether cyberattack has hurricane knowledge for method 1 (worst case) with reconf_strategy as preemptive')
# flags.DEFINE_enum('reconf_post_cyberattack', 'no', ['no', 'yes'], 'decide whether we reconfigure after/with knowledge of cyberattack')
flags.DEFINE_string('probability_choice', '2', 'specifies the choice type in probability method with thresholds, 1- random, 2-worst case')
flags.DEFINE_integer('bucket', 1, 'specifies whether the attacker can take down 1:No attack 2: Server Intru 3. Site Iso  4; Site + Server')
flags.DEFINE_float('site_prob', 5, 'probability to use for site isolation CA in method 3')
flags.DEFINE_float('server_prob', 1, 'probability to use for server intrusion CA in method 3')
flags.DEFINE_enum('simple_print', 'no', ['no', 'yes'], 'decide whether to print simple output or more information')
flags.DEFINE_enum('output_write_to_file', 'no', ['no', 'yes'], 'decide whether to write output to file')
flags.DEFINE_string('output_file', 'default_output_file.csv',  'output filename with path from this directory')
flags.DEFINE_integer('num_CCs', 2, 'specify the number of Control Centres')
flags.DEFINE_enum('save_run_table', 'no', ['no', 'yes'], 'decide whether to save compound table (large file) or not')
flags.DEFINE_string('reconf_rules', "reconf_rules.txt", "file that contains the rules for reconfiguration.")
flags.DEFINE_integer('seed', 0, 'the integer to use as seed for randomization')
flags.DEFINE_integer('events_sequence', 1, 'The sequence of events. 0 is when reconfiguration happens preemptively based on Hurricane knowledge followed by a CA. 1 is when CA is in the aftermath of hurricane and reconfiguration happends on Hurricane impact knowledge only. 2 is when CA coincide with the hurricane and reconfiguration happens with the knowledge of both.')
flags.DEFINE_string('hurricane_subset', 'all', 'If you want to run on a subset of hurricanes in the input file. Valid inputs: \'all\', \'[start,end]\'. For range, first hurricane is hurricane no. 1 not 0 and limits are inclusive')
